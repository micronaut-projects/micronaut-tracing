plugins {
    id 'io.micronaut.build.internal.tracing-module'
    alias libs.plugins.protobuf
}

dependencies {
    api platform (libs.opentelemetry.bom)
    api platform (libs.opentelemetry.bom.alpha)
    api platform (libs.opentelemetry.instrumentation.bom.alpha)
    api mn.micronaut.runtime
    api mn.micronaut.grpc.client.runtime
    api mn.micronaut.grpc.server.runtime
    api projects.tracingAnnotation
    api projects.tracingOpentelemetry
    api libs.opentelemetry.api
    api libs.opentelemetry.extension.annotations
    api libs.opentelemetry.instrumentation.api
    api libs.opentelemetry.instrumentation.grpc

    compileOnly libs.kotlinx.coroutines.core
    compileOnly libs.kotlinx.coroutines.reactor

    testImplementation mn.micronaut.grpc.server.runtime
    testImplementation libs.opentelemetry.sdk
    testImplementation libs.opentelemetry.sdk.testing
    testImplementation libs.opentracing.grpc
    testImplementation libs.grpc.protobuf
    testImplementation libs.grpc.stub
}

sourceSets {
    test {
        java {
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

protobuf {
    protoc { artifact = libs.protoc.asProvider().get() }
    plugins {
        grpc { artifact = libs.protoc.grpc.get() }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// TODO temporarily disable binary compatibility checks
micronautBuild {
    binaryCompatibility {
        enabled = false
    }
}
