plugins {
    id 'io.micronaut.build.internal.tracing-module'
    alias libs.plugins.protobuf
}

dependencies {
    api platform (libs.boms.opentelemetry)
    api platform (libs.boms.opentelemetry.alpha)
    api platform (libs.boms.opentelemetry.instrumentation)
    api platform (libs.boms.opentelemetry.instrumentation.alpha)
    api mn.micronaut.core.processor
    compileOnly mnGrpc.micronaut.grpc.client.runtime
    compileOnly mnGrpc.micronaut.grpc.server.runtime
    api projects.micronautTracingAnnotation
    api projects.micronautTracingOpentelemetry
    api libs.opentelemetry.api
    api libs.opentelemetry.instrumentation.annotations
    api libs.opentelemetry.instrumentation.api
    api libs.opentelemetry.instrumentation.grpc

    testCompileOnly libs.javax.annotation

    testImplementation mn.micronaut.discovery.core
    testImplementation libs.javax.annotation
    testImplementation libs.opentelemetry.sdk
    testImplementation libs.opentelemetry.sdk.testing
    testImplementation libs.opentracing.grpc
    testImplementation libs.grpc.protobuf
    testImplementation libs.grpc.stub
    testImplementation mnSerde.micronaut.serde.jackson

}

sourceSets {
    test {
        java {
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

protobuf {
    protoc { artifact = libs.protoc.asProvider().get() }
    plugins {
        grpc { artifact = libs.protoc.grpc.get() }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
