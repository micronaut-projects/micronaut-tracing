plugins {
    id 'io.micronaut.build.internal.tracing-module'
    alias libs.plugins.protobuf.gradle
}

dependencies {
    api platform (libs.boms.opentelemetry)
    api platform (libs.boms.opentelemetry.alpha)
    api platform (libs.boms.opentelemetry.instrumentation)
    api platform (libs.boms.opentelemetry.instrumentation.alpha)
    api mn.micronaut.runtime
    api projects.tracingAnnotation
    api projects.tracingOpentelemetryAnnotation
    api libs.opentelemetry.api
    api libs.opentelemetry.instrumentation.annotations
    api libs.opentelemetry.instrumentation.api
    api libs.opentelemetry.instrumentation.api.semconv
    api libs.opentelemetry.autoconfigure

    implementation(platform(libs.micronaut.aws.bom))
    implementation(mn.reactor)
    compileOnly libs.opentelemetry.aws.sdk
    compileOnly libs.awssdk.core
    compileOnly(libs.managed.opentelemetry.contrib.aws.xray) {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    compileOnly(libs.managed.opentelemetry.contrib.aws.resources) {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }

    testAnnotationProcessor projects.tracingOpentelemetryAnnotation

    testImplementation mn.reactor
    testImplementation mn.micronaut.reactor.http.client

    testImplementation libs.opentelemetry.sdk
    testImplementation libs.opentelemetry.sdk.testing
    testImplementation libs.opentelemetry.aws.sdk
    testImplementation libs.awssdk.core

    testImplementation(libs.managed.opentelemetry.contrib.aws.xray) {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    testImplementation(libs.managed.opentelemetry.contrib.aws.resources) {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
}

// TODO temporarily disable binary compatibility checks
micronautBuild {
    binaryCompatibility {
        enabled = false
    }
}
