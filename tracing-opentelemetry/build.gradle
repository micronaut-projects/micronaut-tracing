plugins {
    id 'io.micronaut.build.internal.tracing-module'
    alias libs.plugins.protobuf
}

dependencies {
    api platform (libs.boms.opentelemetry)
    api platform (libs.boms.opentelemetry.alpha)
    api platform (libs.boms.opentelemetry.instrumentation.alpha)
    api mn.micronaut.runtime
    api projects.tracingAnnotation
    api projects.tracingOpentelemetryAnnotation
    api libs.opentelemetry.api
    api libs.opentelemetry.extension.annotations
    api libs.opentelemetry.instrumentation.api
    api libs.opentelemetry.instrumentation.api.semconv
    api libs.opentelemetry.autoconfigure

    implementation(platform(libs.boms.aws.java.sdk.v2))
    compileOnly(libs.opentelemetry.aws.sdk)
    compileOnly(libs.awssdk.core)

    compileOnly libs.kotlinx.coroutines.core
    compileOnly libs.kotlinx.coroutines.reactor
    compileOnly libs.managed.opentelemetry.contrib.aws.xray

    testAnnotationProcessor projects.tracingOpentelemetryAnnotation

    testImplementation mn.reactor
    testImplementation mn.micronaut.reactor.http.client

    testImplementation libs.opentelemetry.sdk
    testImplementation libs.opentelemetry.sdk.testing

    testImplementation libs.managed.opentelemetry.contrib.aws.xray
}

// TODO temporarily disable binary compatibility checks
micronautBuild {
    binaryCompatibility {
        enabled = false
    }
}
