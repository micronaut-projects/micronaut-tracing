plugins {
    id 'io.micronaut.build.internal.tracing-module'
    alias libs.plugins.protobuf
}

dependencies {
    api platform (libs.boms.opentelemetry)
    api platform (libs.boms.opentelemetry.alpha)
    api platform (libs.boms.opentelemetry.instrumentation)
    api platform (libs.boms.opentelemetry.instrumentation.alpha)
    api mn.micronaut.context
    api mn.micronaut.core.processor
    api mn.micronaut.core.reactive
    api projects.micronautTracingAnnotation
    api projects.micronautTracingOpentelemetryAnnotation
    api libs.opentelemetry.api
    api libs.opentelemetry.api.events
    api libs.opentelemetry.instrumentation.annotations
    api libs.opentelemetry.instrumentation.api
    api libs.opentelemetry.instrumentation.api.semconv
    api libs.opentelemetry.autoconfigure

    implementation(platform(libs.micronaut.aws))
    compileOnly(libs.opentelemetry.aws.sdk)
    compileOnly(libs.awssdk.core)
    testImplementation(libs.opentelemetry.aws.sdk)
    testImplementation(libs.awssdk.core)

    compileOnly libs.kotlinx.coroutines.core
    compileOnly libs.kotlinx.coroutines.reactor
    compileOnly libs.managed.opentelemetry.contrib.aws.xray

    testAnnotationProcessor projects.micronautTracingOpentelemetryAnnotation

    testImplementation(libs.managed.opentelemetry.contrib.aws.resources)

    testImplementation mnReactor.micronaut.reactor
    testImplementation mnReactor.micronaut.reactor.http.client

    testImplementation libs.opentelemetry.sdk
    testImplementation libs.opentelemetry.sdk.testing

    testImplementation libs.managed.opentelemetry.contrib.aws.xray

    testImplementation mnSerde.micronaut.serde.jackson
}
